apiVersion: apps/v1
kind: Deployment
metadata:
  name: pidaosphere-app
  namespace: pidaosphere
  labels:
    app: pidaosphere
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pidaosphere
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pidaosphere
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: app
        image: pidaosphere/app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: SOLANA_NETWORK
          valueFrom:
            configMapKeyRef:
              name: pidaosphere-config
              key: solana_network
        - name: RPC_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: pidaosphere-config
              key: rpc_endpoint
        - name: PROGRAM_ID
          valueFrom:
            secretKeyRef:
              name: pidaosphere-secrets
              key: program_id
        - name: PI_NETWORK_API
          valueFrom:
            configMapKeyRef:
              name: pidaosphere-config
              key: pi_network_api
        - name: PI_APP_ID
          valueFrom:
            secretKeyRef:
              name: pidaosphere-secrets
              key: pi_app_id
        - name: PI_API_KEY
          valueFrom:
            secretKeyRef:
              name: pidaosphere-secrets
              key: pi_api_key
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: pidaosphere-secrets
              key: jwt_secret
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: pidaosphere-secrets
              key: redis_url
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - pidaosphere
              topologyKey: kubernetes.io/hostname 