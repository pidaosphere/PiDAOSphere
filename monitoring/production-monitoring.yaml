apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: pidaosphere-alerts
  namespace: monitoring
spec:
  groups:
  - name: node
    rules:
    - alert: HighCPUUsage
      expr: instance:node_cpu_usage:rate5m > 80
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: High CPU usage on {{ $labels.instance }}
        description: CPU usage is above 80% for 5 minutes

    - alert: HighMemoryUsage
      expr: instance:node_memory_usage:rate5m > 85
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: High memory usage on {{ $labels.instance }}
        description: Memory usage is above 85% for 5 minutes

  - name: application
    rules:
    - alert: HighErrorRate
      expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: High error rate
        description: Error rate is above 5% for 5 minutes

    - alert: HighLatency
      expr: http_request_duration_seconds{quantile="0.9"} > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: High latency
        description: 90th percentile latency is above 1s for 5 minutes

  - name: blockchain
    rules:
    - alert: HighContractFailureRate
      expr: rate(contract_calls_failed_total[5m]) / rate(contract_calls_total[5m]) > 0.02
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: High contract failure rate
        description: Contract failure rate is above 2% for 5 minutes

    - alert: LowTPS
      expr: solana_tps < 1000
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: Low TPS
        description: Transaction throughput is below 1000 TPS for 5 minutes

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: pidaosphere-monitor
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: pidaosphere
  endpoints:
  - port: http
    path: /metrics
    interval: 15s
    scrapeTimeout: 10s

---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: pidaosphere-pods
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: pidaosphere
  podMetricsEndpoints:
  - port: metrics
    path: /metrics
    interval: 15s

---
apiVersion: monitoring.coreos.com/v1
kind: Alertmanager
metadata:
  name: pidaosphere
  namespace: monitoring
spec:
  replicas: 3
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: '${SLACK_WEBHOOK_URL}'
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'alerts@pidaosphere.com'
      smtp_auth_username: '${SMTP_USERNAME}'
      smtp_auth_password: '${SMTP_PASSWORD}'
      smtp_require_tls: true

    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: 'slack-notifications'
      routes:
      - match:
          severity: critical
        receiver: 'pager-notifications'
        continue: true
      - match:
          severity: warning
        receiver: 'slack-notifications'

    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - channel: '#alerts'
        send_resolved: true
        title: '{{ template "slack.default.title" . }}'
        text: '{{ template "slack.default.text" . }}'
        
    - name: 'pager-notifications'
      pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        send_resolved: true

    - name: 'email-notifications'
      email_configs:
      - to: 'team@pidaosphere.com'
        send_resolved: true

    templates:
    - '/etc/alertmanager/template/*.tmpl'

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
data:
  pidaosphere-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "PiDAOSphere Overview",
        "tags": ["pidaosphere"],
        "timezone": "browser",
        "panels": [
          {
            "title": "System Overview",
            "type": "row",
            "panels": [
              {
                "title": "CPU Usage",
                "type": "graph",
                "targets": [
                  {
                    "expr": "instance:node_cpu_usage:rate5m"
                  }
                ]
              },
              {
                "title": "Memory Usage",
                "type": "graph",
                "targets": [
                  {
                    "expr": "instance:node_memory_usage:rate5m"
                  }
                ]
              }
            ]
          },
          {
            "title": "Application Metrics",
            "type": "row",
            "panels": [
              {
                "title": "Request Rate",
                "type": "graph",
                "targets": [
                  {
                    "expr": "rate(http_requests_total[5m])"
                  }
                ]
              },
              {
                "title": "Error Rate",
                "type": "graph",
                "targets": [
                  {
                    "expr": "rate(http_requests_total{status=~\"5..\"}[5m]) / rate(http_requests_total[5m])"
                  }
                ]
              }
            ]
          }
        ]
      }
    } 