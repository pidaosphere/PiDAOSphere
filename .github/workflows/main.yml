name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Run Linting
      run: npm run lint
      
    - name: Run Tests
      run: npm run test:coverage
      env:
        CI: true
        
    - name: Upload Coverage
      uses: codecov/codecov-action@v2

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          pidaosphere/app:latest
          pidaosphere/app:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Save DigitalOcean kubeconfig
      run: doctl kubernetes cluster kubeconfig save pidaosphere-cluster
      
    - name: Update Deployment
      run: |
        kubectl set image deployment/pidaosphere-app app=pidaosphere/app:${{ github.sha }}
        kubectl rollout status deployment/pidaosphere-app
        
    - name: Verify Deployment
      run: |
        kubectl get services -o wide
        kubectl get pods -o wide 